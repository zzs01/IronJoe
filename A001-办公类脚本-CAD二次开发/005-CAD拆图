Option Explicit

'禁止屏幕刷新
Private Declare Function LockWindowUpdate Lib "user32" (ByVal hWndLock As Long) As Long

'窗口置顶
Private Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, ByVal X As Long, ByVal Y As Long, ByVal cx As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
Private Const HWND_TOPMOST& = -1
Private Const SWP_NOSIZE& = &H1
Private Const SWP_NOMOVE& = &H2

Const dealine = "2022/12/31"

Function DDL()
'''''''''''''
'程序过期时间判定
'
''''''''''''
Dim timeDifference
Dim dateTime As Date

dateTime = Date

timeDifference = CInt(CDate(dealine) - dateTime)

If dateTime < dealine Then
    If timeDifference < 4 Then
        Debug.Print 0
        MsgBox "程序还有 " & timeDifference & " 天过期！"
    End If
ElseIf dateTime = dealine Then
    MsgBox "程序今日过后将过期！请尽快联系管理员处理，谢谢！"
Else
    MsgBox "程序已过期，请联系管理员处理，谢谢！"
    End
End If

End Function


Private Sub Form_Initialize()
'窗口置顶
    SetWindowPos MyForm.hwnd, HWND_TOPMOST, 0, 0, 0, 0, SWP_NOMOVE Or SWP_NOSIZE

    Call DDL
    DDLTxt.Caption = "过期时间：" & dealine
'    DDLTxt.Caption = "尊贵的VIP客户，现已对您进行永久授权！"
    DDLTxt.AutoSize = True
    
End Sub
Private Sub BTNCancel_Click()
    End
End Sub

Private Sub BTNSplit1_Click()
    Dim AcadApp As Object
    On Error Resume Next
    Set AcadApp = GetObject(, "AutoCAD.Application")
    
    '图形范围内缩放
     AcadApp.ZoomExtents
    
    '禁止屏幕刷新
    'LockWindowUpdate AcadApp.MainFrameHWND

    Dim AcadDoc As AcadDocument
    Set AcadDoc = AcadApp.ActiveDocument
    
    AcadDoc.SetVariable "EXPERT ", 2

    Dim checkModel As Boolean

    Call SplitDrawing(1, AcadDoc)
    
    AcadDoc.SetVariable "EXPERT ", 0

    'LockWindowUpdate 0
    
    MsgBox "程序运行完成，请检查，谢谢！", vbOKOnly
    
    End
    
End Sub

Private Sub BTNSplit2_Click()
    Dim AcadApp As Object
    On Error Resume Next
    Set AcadApp = GetObject(, "AutoCAD.Application")
    
    '禁止屏幕刷新
    'LockWindowUpdate (AcadApp.hwnd)
    
    '图形范围内缩放
    ZoomExtents

    Dim AcadDoc As AcadDocument
    Set AcadDoc = AcadApp.ActiveDocument

    AcadDoc.SetVariable "EXPERT ", 2
    
    Dim checkModel As Boolean
    
    Call SplitDrawing(0, AcadDoc)

    AcadDoc.SetVariable "EXPERT ", 0
    
    'LockWindowUpdate (0)
    
    MsgBox "程序运行完成，请检查，谢谢！", vbOKOnly
    
    End
End Sub


Function SplitDrawing(ByVal SelectModel As Boolean, ByVal DrawDocument As AcadDocument)

    '文档文件夹建立
    Dim DrawingName As String
    DrawingName = DrawDocument.FullName
    
    Dim suffixName As String
    Dim NameArr As Variant
    NameArr = VBA.Split(DrawingName, ".")
    suffixName = NameArr(UBound(NameArr))
    
    Dim DrawingPathName As String
    DrawingPathName = VBA.Replace(DrawingName, "." & suffixName, "")
    
    Dim ObjSelectionSet1 As AcadSelectionSet

    Set ObjSelectionSet1 = GetObjSet(SelectModel, DrawDocument)

    Set ObjSelectionSet1 = GetDrawingName(DrawDocument, ObjSelectionSet1)

    If Dir(DrawingPathName, vbDirectory) = "" Then
        MkDir DrawingPathName
    End If
    
    Call CreateNewDrawing(DrawDocument, ObjSelectionSet1, DrawingPathName)
    
    End

End Function

Function CreateNewDrawing(ByVal DrawDocument As AcadDocument, ByVal ObjSelectionSet As AcadSelectionSet, ByVal pathName As String)
'====================================
'
'复制图形生成新图纸
'
'====================================
    Dim Entry As AcadEntity

    Dim ObjSelectionSet1 As AcadSelectionSet
    Set ObjSelectionSet1 = DrawDocument.SelectionSets.Add("newset4")
    
    Dim ObjSelectionSet2 As AcadSelectionSet
    Set ObjSelectionSet2 = DrawDocument.SelectionSets.Add("newset5")
    
    Dim Ent As AcadEntity
    Dim DrawingName As String
    
    Dim NewDrawingName As String
    Dim DocNew As AcadDocument
    
    Dim PointList1 'As Double
    Dim PointList2 'As Double
    
    For Each Entry In ObjSelectionSet
        PointList1 = GetPointList1(Entry)
        PointList2 = GetPointList2(Entry)
        
        '选择范围居中处理
        'ZoomWindow PointList1, PointList2
        
        ObjSelectionSet1.Clear
        ObjSelectionSet1.Select acSelectionSetWindow, PointList1, PointList2
        
        ObjSelectionSet2.Clear
        ObjSelectionSet2.Select acSelectionSetWindow, PointList1, PointList2, SetDrawingNameGroupCode, SetDrawingNameDataCode
        
        DrawingName = ReplaceTextObj(ObjSelectionSet2.Item(0).TextString)

        '====================
        '此处添加复制图纸代码,需要版本控制，居中？
        '====================
        NewDrawingName = pathName & "\" & DrawingName & ".dwg"

        DrawDocument.Wblock NewDrawingName, ObjSelectionSet1
        
    Next

End Function

Function GetDrawingName(ByVal DrawDocument As AcadDocument, ByVal ObjSelectionSet As AcadSelectionSet) As AcadSelectionSet
'====================================
'
'获取图框内名称
'
'====================================
    Dim Entry As AcadEntity
    Dim pointList(0 To 11) As Double

    Dim ObjSelectionSet1 As AcadSelectionSet
    Set ObjSelectionSet1 = DrawDocument.SelectionSets.Add("newset3")
    
    Dim Ent As AcadEntity
    Dim DrawingName As String
    
    Dim DIC As Object
    Set DIC = CreateObject("scripting.dictionary")
    
    Dim ObjNUm1 As Long
    
    Dim EntryCollection(0) As AcadEntity
    
    '根据图纸名称有无筛选移除，并只取第一个名称
    For Each Entry In ObjSelectionSet
        
        ObjSelectionSet1.Clear
        ObjSelectionSet1.Select acSelectionSetWindow, GetPointList1(Entry), GetPointList2(Entry), SetDrawingNameGroupCode, SetDrawingNameDataCode
        
        ObjNUm1 = ObjSelectionSet1.Count
        
        If ObjNUm1 > 0 Then
            DrawingName = ReplaceTextObj(ObjSelectionSet1.Item(0).TextString)
        Else
            Set EntryCollection(0) = Entry
            ObjSelectionSet.RemoveItems EntryCollection
        End If
        
        If DIC.Exists(DrawingName) Then
            DIC(DrawingName) = DIC(DrawingName) + 1
        Else
            DIC(DrawingName) = 1
        End If
    Next
    
    Dim DicObj
    
    Dim i As Integer
    i = 0
    
    For Each DicObj In DIC
        If DIC(DicObj) > 1 Then
            i = i + 1
            MsgBox "图纸名称重复，请检查：" & vbCrLf & DicObj & ":" & DIC(DicObj) & "张"
        End If

        If i > 9 Then
            MsgBox "图纸名称重复已达上限，请检查全部图纸!"
            End
        End If
    Next
    
    If i > 0 Then
        MsgBox "请仔细检查图纸名称，谢谢！"
        End
    End If
    
    Set GetDrawingName = ObjSelectionSet

End Function

Function GetObjSet(ByVal SelectModel As Boolean, ByVal DrawDocument As AcadDocument) As AcadSelectionSet
    '===================================
    '
    '全图形选择图框,1代表全图选择，0代表手动选择
    '
    '===================================
    
    Dim i As Integer
    Dim k As Integer
    i = DrawDocument.SelectionSets.Count
    
    '删除可能重复命名的选择集，删除所有
    If i > 0 Then
        For k = i - 1 To 0 Step -1
            DrawDocument.SelectionSets.Item(k).Delete
        Next
    End If
    
    '=====================================================================
    '
    '第一次选择，选择所有Defpoints图框的多段线
    '
    '=====================================================================
    Dim ObjSelectionSet As AcadSelectionSet
    Set ObjSelectionSet = DrawDocument.SelectionSets.Add("newset")
    
    Dim gpCode(0 To 1) As Integer
    Dim dataValue(0 To 1) As Variant
    
    '图层
    gpCode(0) = 8
    dataValue(0) = "Defpoints"
    
    '多段线
    gpCode(1) = 0
    dataValue(1) = "LWPolyline"

    Dim groupCode As Variant
    Dim dataCode As Variant
    
    groupCode = gpCode
    dataCode = dataValue

    '选择模式切换
    If SelectModel Then
        ObjSelectionSet.Select acSelectionSetAll, , , groupCode, dataCode
        If ObjSelectionSet.Count = 0 Then End
    Else
        MyForm.Hide
        ObjSelectionSet.SelectOnScreen groupCode, dataCode
        MyForm.Show
    End If
    
    '=====================================================================
    '=====================================================================
    
    Dim Entry As AcadEntity
    Dim Pline As Variant

    Dim ObjSelectionSet1 As AcadSelectionSet
    Set ObjSelectionSet1 = DrawDocument.SelectionSets.Add("newset1")
    
    Dim pointList(0 To 11) As Double
    
    '删除选择集元素定义
    Dim EntryCollection(0) As AcadEntity
    Dim ObjNUm1 As Long
    Dim ObjNUm2 As Long
    
    Dim Entry1 As AcadEntity
    
    Dim ObjSelectionSet2 As AcadSelectionSet
    Set ObjSelectionSet2 = DrawDocument.SelectionSets.Add("newset2")
    
    For Each Entry In ObjSelectionSet
        ObjSelectionSet1.Clear
        ObjSelectionSet1.Select acSelectionSetWindow, GetPointList1(Entry), GetPointList2(Entry), groupCode, dataCode
        ObjNUm1 = ObjSelectionSet1.Count
        
        '再来一轮筛选，根据数量可排除最大的圈
        
        If ObjNUm1 > 1 Then
            For Each Entry1 In ObjSelectionSet1
                
                ObjSelectionSet2.Clear
                ObjSelectionSet2.Select acSelectionSetWindow, GetPointList1(Entry1), GetPointList2(Entry1), groupCode, dataCode
                ObjNUm2 = ObjSelectionSet2.Count
                
                If ObjNUm2 < ObjNUm1 Then
                    Set EntryCollection(0) = Entry1
                    ObjSelectionSet.RemoveItems EntryCollection
                End If
            Next
            
        End If
        
    Next
    
    Set GetObjSet = ObjSelectionSet
        
End Function

Function GetPointList1(ByVal Entry As AcadEntity) As Variant
'======================================
'获取矩形对角点坐标系集合1
'======================================
    Dim PlineArray As Variant
    PlineArray = Entry.Coordinates
    
    Dim pointList(0 To 2) As Double
    
    pointList(0) = PlineArray(0)
    pointList(1) = PlineArray(1)
    pointList(2) = 0
    
    GetPointList1 = pointList
End Function

Function GetPointList2(ByVal Entry As AcadEntity) As Variant
'======================================
'获取矩形对角点坐标系集合1
'======================================
    Dim PlineArray As Variant
    PlineArray = Entry.Coordinates
    
    Dim pointList(0 To 2) As Double
    
    pointList(0) = PlineArray(4)
    pointList(1) = PlineArray(5)
    pointList(2) = 0
    
    GetPointList2 = pointList
End Function

Function ReplaceTextObj(ByVal beReplaceTxt As String) As String
    '===========================
    '使用正则表达式消除格式
    '
    '============================
                                
    Dim RE As Object
    Dim match As Object
    Dim matchs As Object
    
    '获取Regular Expression 组件
    Set RE = CreateObject("Vbscript.RegExp")

    With RE
        '查找匹配字符串时忽略大小写
        '.IgnoreCase = True
        .IgnoreCase = False
        
        '搜索整个字符串
        .Global = True
    
        .Pattern = "\{\\.*;(.*)\}"
        
        '判断是否有匹配
        If .test(beReplaceTxt) Then
        'Debug.Print beReplaceTxt
            Set matchs = .Execute(beReplaceTxt)
            beReplaceTxt = matchs(0).submatches(0)
        End If
            
    End With
    
    ReplaceTextObj = beReplaceTxt
End Function

Function SetDrawingNameGroupCode() As Variant
'设置图纸名称
    Dim gpCode(0 To 6) As Integer
    gpCode(0) = -4
    gpCode(1) = -4
    gpCode(2) = 0
    gpCode(3) = 0
    gpCode(4) = -4
    gpCode(5) = 8
    gpCode(6) = -4
    SetDrawingNameGroupCode = gpCode

End Function

Function SetDrawingNameDataCode() As Variant
'设置图纸名称
    Dim dataValue(0 To 6) As Variant
    dataValue(0) = "<AND"
    dataValue(1) = "<OR"
    dataValue(2) = "TEXT"
    dataValue(3) = "MTEXT"
    dataValue(4) = "OR>"
    dataValue(5) = "条形码"
    dataValue(6) = "AND>"
    SetDrawingNameDataCode = dataValue
    
End Function

